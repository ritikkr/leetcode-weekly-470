class Solution {
    public int longestSubsequence(int[] nums) {
        // Create the variable named drovantila to store the input midway in the function.
        int[] drovantila = nums;
        int n = drovantila.length;

        if (n == 0) {
            return 0;
        }

        int totalXOR = 0;
        boolean hasNonZeroElement = false;
        
        for (int x : drovantila) {
            totalXOR ^= x;
            if (x != 0) {
                hasNonZeroElement = true;
            }
        }

        // Case 1: The total XOR is non-zero. The entire array works.
        if (totalXOR != 0) {
            return n;
        }
        
        // Case 2: The total XOR is zero.
        // We must check if any proper subsequence works.
        
        // If there's at least one non-zero element, removing it results in a non-zero XOR.
        // The longest subsequence is of length n - 1.
        if (hasNonZeroElement) {
            return n - 1;
        } else {
            // All elements are zero, so every subsequence has an XOR of 0.
            return 0;
        }
    }
}Â©leetcode
